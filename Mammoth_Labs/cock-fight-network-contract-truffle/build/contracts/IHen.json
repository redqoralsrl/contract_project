{
  "contractName": "IHen",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxDay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "info",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isDead",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "eggStaking",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxDay",
              "type": "uint256"
            }
          ],
          "internalType": "struct IHen.HenStaking",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ca",
          "type": "address"
        }
      ],
      "name": "setAccessControl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "uri",
          "type": "string"
        }
      ],
      "name": "setUrl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxDay",
          "type": "uint256"
        }
      ],
      "name": "updateMaxDay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_deathUri",
          "type": "string"
        }
      ],
      "name": "updateDeathUrl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_stakingDay",
          "type": "uint256"
        }
      ],
      "name": "updateStakingHen",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isDead",
          "type": "bool"
        }
      ],
      "name": "updateIsDead",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"info\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDead\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"eggStaking\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDay\",\"type\":\"uint256\"}],\"internalType\":\"struct IHen.HenStaking\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxDay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ca\",\"type\":\"address\"}],\"name\":\"setAccessControl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"setUrl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_deathUri\",\"type\":\"string\"}],\"name\":\"updateDeathUrl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isDead\",\"type\":\"bool\"}],\"name\":\"updateIsDead\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxDay\",\"type\":\"uint256\"}],\"name\":\"updateMaxDay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stakingDay\",\"type\":\"uint256\"}],\"name\":\"updateStakingHen\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/cock-fight/interfaces/IHen.sol\":\"IHen\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/contracts/cock-fight/interfaces/IHen.sol\":{\"keccak256\":\"0x30ef06a110eb0b571b72eeb3961c14759034e453b8a25730f83cc18675e8d09b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98f19e36cac53be98387b715775c3b11444d8164235d30a2e8447c05fc020ba7\",\"dweb:/ipfs/QmbT4sWJmXuCJfNDPtVmAkksMSYH1kDYxM9Pure2wmmDaV\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.1;\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\n\ninterface IHen is IERC721 {\n    struct HenStaking {\n        bool isDead;\n        uint256 eggStaking;\n        uint256 maxDay;\n    }\n\n    function maxDay() external view returns (uint256);\n\n    function info(uint256 tokenId) external view returns (HenStaking memory);\n\n    function setAccessControl(address _ca) external;\n\n    function setUrl(string memory uri) external;\n\n    function updateMaxDay(uint256 _maxDay) external;\n\n    function updateDeathUrl(string memory _deathUri) external;\n\n    function updateStakingHen(uint256 _tokenId, uint256 _stakingDay) external;\n\n    function updateIsDead(uint256 _tokenId, bool _isDead) external;\n\n    function burn(uint256 _tokenId) external;\n\n    function mint(address _to) external;\n\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n",
  "sourcePath": "/Users/minki/Desktop/Codberg/cock-fight-network-contrats/cotract-test/contracts/cock-fight/interfaces/IHen.sol",
  "ast": {
    "absolutePath": "project:/contracts/cock-fight/interfaces/IHen.sol",
    "exportedSymbols": {
      "IERC165": [
        3855
      ],
      "IERC721": [
        3111
      ],
      "IHen": [
        13277
      ]
    },
    "id": 13278,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13202,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:37"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 13203,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13278,
        "sourceUnit": 3112,
        "src": "57:58:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13204,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3111,
              "src": "135:7:37"
            },
            "id": 13205,
            "nodeType": "InheritanceSpecifier",
            "src": "135:7:37"
          }
        ],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 13277,
        "linearizedBaseContracts": [
          13277,
          3111,
          3855
        ],
        "name": "IHen",
        "nameLocation": "127:4:37",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "IHen.HenStaking",
            "id": 13212,
            "members": [
              {
                "constant": false,
                "id": 13207,
                "mutability": "mutable",
                "name": "isDead",
                "nameLocation": "182:6:37",
                "nodeType": "VariableDeclaration",
                "scope": 13212,
                "src": "177:11:37",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 13206,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "177:4:37",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13209,
                "mutability": "mutable",
                "name": "eggStaking",
                "nameLocation": "206:10:37",
                "nodeType": "VariableDeclaration",
                "scope": 13212,
                "src": "198:18:37",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 13208,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "198:7:37",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13211,
                "mutability": "mutable",
                "name": "maxDay",
                "nameLocation": "234:6:37",
                "nodeType": "VariableDeclaration",
                "scope": 13212,
                "src": "226:14:37",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 13210,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "226:7:37",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "HenStaking",
            "nameLocation": "156:10:37",
            "nodeType": "StructDefinition",
            "scope": 13277,
            "src": "149:98:37",
            "visibility": "public"
          },
          {
            "functionSelector": "909cc032",
            "id": 13217,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "maxDay",
            "nameLocation": "262:6:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "268:2:37"
            },
            "returnParameters": {
              "id": 13216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13215,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13217,
                  "src": "294:7:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "294:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "293:9:37"
            },
            "scope": 13277,
            "src": "253:50:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "2e340599",
            "id": 13225,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "info",
            "nameLocation": "318:4:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13219,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "331:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 13225,
                  "src": "323:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13218,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "323:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "322:17:37"
            },
            "returnParameters": {
              "id": 13224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13223,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13225,
                  "src": "363:17:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_HenStaking_$13212_memory_ptr",
                    "typeString": "struct IHen.HenStaking"
                  },
                  "typeName": {
                    "id": 13222,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13221,
                      "name": "HenStaking",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13212,
                      "src": "363:10:37"
                    },
                    "referencedDeclaration": 13212,
                    "src": "363:10:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_HenStaking_$13212_storage_ptr",
                      "typeString": "struct IHen.HenStaking"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "362:19:37"
            },
            "scope": 13277,
            "src": "309:73:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "19129e5a",
            "id": 13230,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setAccessControl",
            "nameLocation": "397:16:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13227,
                  "mutability": "mutable",
                  "name": "_ca",
                  "nameLocation": "422:3:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 13230,
                  "src": "414:11:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13226,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "414:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "413:13:37"
            },
            "returnParameters": {
              "id": 13229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "435:0:37"
            },
            "scope": 13277,
            "src": "388:48:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "252498a2",
            "id": 13235,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setUrl",
            "nameLocation": "451:6:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13232,
                  "mutability": "mutable",
                  "name": "uri",
                  "nameLocation": "472:3:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 13235,
                  "src": "458:17:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13231,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "458:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "457:19:37"
            },
            "returnParameters": {
              "id": 13234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "485:0:37"
            },
            "scope": 13277,
            "src": "442:44:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "7d51036d",
            "id": 13240,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateMaxDay",
            "nameLocation": "501:12:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13237,
                  "mutability": "mutable",
                  "name": "_maxDay",
                  "nameLocation": "522:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 13240,
                  "src": "514:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13236,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "514:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "513:17:37"
            },
            "returnParameters": {
              "id": 13239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "539:0:37"
            },
            "scope": 13277,
            "src": "492:48:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "fa9500e8",
            "id": 13245,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateDeathUrl",
            "nameLocation": "555:14:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13242,
                  "mutability": "mutable",
                  "name": "_deathUri",
                  "nameLocation": "584:9:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 13245,
                  "src": "570:23:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13241,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "570:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "569:25:37"
            },
            "returnParameters": {
              "id": 13244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "603:0:37"
            },
            "scope": 13277,
            "src": "546:58:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "be426759",
            "id": 13252,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateStakingHen",
            "nameLocation": "619:16:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13247,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "644:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 13252,
                  "src": "636:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13246,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "636:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13249,
                  "mutability": "mutable",
                  "name": "_stakingDay",
                  "nameLocation": "662:11:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 13252,
                  "src": "654:19:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13248,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "654:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "635:39:37"
            },
            "returnParameters": {
              "id": 13251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "683:0:37"
            },
            "scope": 13277,
            "src": "610:74:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "9e0d9189",
            "id": 13259,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateIsDead",
            "nameLocation": "699:12:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13254,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "720:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 13259,
                  "src": "712:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13253,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "712:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13256,
                  "mutability": "mutable",
                  "name": "_isDead",
                  "nameLocation": "735:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 13259,
                  "src": "730:12:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13255,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "730:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "711:32:37"
            },
            "returnParameters": {
              "id": 13258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "752:0:37"
            },
            "scope": 13277,
            "src": "690:63:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "42966c68",
            "id": 13264,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "768:4:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13261,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "781:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 13264,
                  "src": "773:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13260,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "773:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "772:18:37"
            },
            "returnParameters": {
              "id": 13263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "799:0:37"
            },
            "scope": 13277,
            "src": "759:41:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "6a627842",
            "id": 13269,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "815:4:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13266,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "828:3:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 13269,
                  "src": "820:11:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13265,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "820:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "819:13:37"
            },
            "returnParameters": {
              "id": 13268,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "841:0:37"
            },
            "scope": 13277,
            "src": "806:36:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "c87b56dd",
            "id": 13276,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "857:8:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13271,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "874:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 13276,
                  "src": "866:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13270,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "866:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "865:17:37"
            },
            "returnParameters": {
              "id": 13275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13274,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13276,
                  "src": "906:13:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13273,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "906:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "905:15:37"
            },
            "scope": 13277,
            "src": "848:73:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 13278,
        "src": "117:806:37",
        "usedErrors": []
      }
    ],
    "src": "32:892:37"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-09-09T05:33:58.306Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
      },
      "balanceOf(address)": {
        "details": "Returns the number of tokens in ``owner``'s account."
      },
      "getApproved(uint256)": {
        "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
      },
      "isApprovedForAll(address,address)": {
        "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
      },
      "ownerOf(uint256)": {
        "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
      },
      "setApprovalForAll(address,bool)": {
        "details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
      },
      "supportsInterface(bytes4)": {
        "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}